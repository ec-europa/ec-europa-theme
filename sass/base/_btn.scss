/*
Buttons

Custom bootstrap buttons styling.

Markup: html/btn.html

.btn-default     - Button default
.btn-primary     - Button primary
.btn-secondary   - Button secondary
.btn-ctn         - Button call to action
.btn-menu        - Button menu
.btn--margin-top   - Button modifier, margin on top
.btn--margin-right - Button modifier, margin on right

Style guide: buttons
*/

.btn {
  min-height: 2.75em;
  margin-bottom: 1em;
  padding: 0.5em 1em;
  line-height: 1.5;
  white-space: normal; // Override Bootstrap white-space: nowrap;
  text-align: left;
  font-size: $font-size-little;
  font-weight: $font-weight-bold;
  border-width: 2px;
  border-radius: 0;
  text-decoration: none;

  @include _focus_outline_border(3px, $ec-yellow, -3px);
  @extend .hidden-print;

  &:link {
    text-decoration: none;
  }

  &:hover,
  &:active,
  &:focus {
    position: relative;
    text-decoration: underline;
    z-index: 999;

    @include box-shadow(none);
  }

  &::after {
    position: static;
    line-height: inherit;
  }

  &.btn-default {
    background: none;
    color: $brand-primary;
    border-color: $brand-primary;

    &:hover,
    &:focus  {
      background-color: $brand-primary;
      color: #fff;
    }
  }

  &.btn-primary {
    border-color: $brand-primary;

    &:hover,
    &:active {
      background-color: #fff;
      color: $brand-primary;
    }

    &:focus {
      background-color: $brand-primary;
      color: #fff;
    }
  }

  &.btn-secondary {
    background-color: #fff;
    color: $brand-primary;
    border-color: #fff;
  }

  &.btn-ctn {
    background-color: $ec-yellow;
    color: #000;

    &:hover,
    &:active {
      background-color: $ec-yellow;
      border-color: $ec-grey;
    }

    &:focus {
      border-color: $ec-grey;
      outline-color: $ec-grey;
    }

    &::after {
      @extend .icon--after;
      @extend .icon--right;

      margin-left: 10px;
    }
  }

  &.btn-menu {
    background-color: $brand-primary;
    color: #fff;
    border-color: $brand-primary;

    &:hover,
    &:active,
    &:focus {
      color: #fff;
    }

    @include _focus_outline_border(3px, $ec-yellow, -3px);

    &::after {
      @extend .icon--after;
      @extend .icon--right;
      @extend .icon--arrow-down;

      margin-left: 10px;
    }
  }
}

// Button modifier to add space between the button and the element above.
.btn--margin-top {
  margin-top: 0.556em;
}

// Button modifier to add space between the button and the element on the right.
.btn--margin-right {
  margin-right: 1.5em;
}

// Class that can be also used on a button wrapper since there are sometimes
// situations where button is wrapped in unnecessary markup coming from a CMS.
.btn--no-margin-bottom {
  & * {
    margin-bottom: 0 !important;
  }

  margin-bottom: 0 !important;
}

/*
Button Condensed

Button condensed element.

Markup: html/btn-condensed.html

Style guide: buttons.btn--condensed
*/

.btn.btn--condensed {
  width: auto;
  font-weight: normal;
}

/*
Button block

Button block component.

Markup: html/btn-block.html

Style guide: buttons.btn-block
*/

.btn-block {
  max-width: 450px;
  width: 100%;
  margin-bottom: -2px !important;

  &:last-child {
    margin-bottom: 10px;
  }

  & + .btn-block {
    margin-top: 0;
  }
}

/*
Button Search

Button search component.

Markup: html/btn-search.html

Style guide: buttons.btn-search
*/

.btn.btn-search {
  background-color: $ec-grey15;
  color: $ec-blue;
  border-color: #fff;

  &:hover {
    background-color: $ec-grey15;
    color: $text-color;
  }
}

/*
Button Collapse

Button collapse element.

Markup: html/btn-collapse.html

Style guide: buttons.btn-collapse
*/

.btn-collapse {
  @extend .btn-default;

  .icon {
    margin-left: 0.3em;

    &::before {
      text-decoration: none;

      @include transition(all 0.3s ease 0s);
    }
  }

  &:hover,
  &:focus {
    .icon {
      &::before {
        color: #fff;
        text-decoration: underline; // IE hack to remove underline on pseudo-element.

      }

      &::before {
        text-decoration: none; // IE hack to remove underline on pseudo-element.
      }
    }
  }

  .no-js & {
    display: none;
  }
}

// External link specific adjustments.
@mixin _btn_external_link_mixin() {
  padding-right: 2.2em;

  &::after {
    position: absolute;
    line-height: 1.9 !important;
  }

  // Reset for ".btn-block".
  &.btn-block {
    padding-right: 1em;

    &::after {
      position: static;
      line-height: inherit;
    }
  }

  // Call to action and menu button.
  &.btn-ctn,
  &.btn-menu {
    &::after {
      line-height: 2.0 !important;
    }
  }
}

a.btn {
  &#{"[" + $external_link_pattern + "]"}:not(.is-internal) {
    &:not(#{$ec_url_patterns}) {
      @include _btn_external_link_mixin();
    }
  }
}
